import { promisify } from 'util';
import * as fs from 'fs';
import * as path from 'path';
import { getEmulatorsAlreadyRunning } from './emulator-state';

const exec = promisify(require('child_process').exec);

export default async function globalTeardown() {
    if (getEmulatorsAlreadyRunning()) {
        console.log('‚ÑπÔ∏è  [Global Teardown] –≠–º—É–ª—è—Ç–æ—Ä—ã –±—ã–ª–∏ –∑–∞–ø—É—â–µ–Ω—ã –¥–æ —Ç–µ—Å—Ç–æ–≤, –æ—Å—Ç–∞–≤–ª—è–µ–º –∏—Ö —Ä–∞–±–æ—Ç–∞—Ç—å.');
        return;
    }

    console.log('üõë [Global Teardown] –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Firebase Emulator Suite...');
    
    const pidFile = path.join(__dirname, '.emulator.pid');
    let pid: number | null = null;
    if (fs.existsSync(pidFile)) {
        pid = parseInt(fs.readFileSync(pidFile, 'utf8'), 10);
        fs.unlinkSync(pidFile);
    }
    
    if (pid) {
        try {
            if (process.platform === 'win32') {
                // –î–ª—è Windows –Ω—É–∂–Ω–æ —É–±–∏—Ç—å –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
                await exec(`taskkill /PID ${pid} /T /F`);
            } else {
                // –î–ª—è Linux/macOS —É–±–∏–≤–∞–µ–º –≥—Ä—É–ø–ø—É –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
                process.kill(-pid, 'SIGTERM');
            }
            console.log(`‚úÖ [Global Teardown] –ü—Ä–æ—Ü–µ—Å—Å —ç–º—É–ª—è—Ç–æ—Ä–∞ (PID: ${pid}) –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.`);
        } catch (error) {
            console.warn(`‚ö†Ô∏è  [Global Teardown] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å PID ${pid}. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è.`);
            // –ü—Ä–æ–±—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
            await exec('firebase emulators:stop').catch(() => {});
        }
    } else {
        console.log('    - PID –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º `firebase emulators:stop`.');
        await exec('firebase emulators:stop').catch((err: any) => {
            console.warn('‚ö†Ô∏è  [Global Teardown] –ö–æ–º–∞–Ω–¥–∞ `firebase emulators:stop` –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ.');
        });
    }
    console.log('‚úÖ [Global Teardown] –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
}