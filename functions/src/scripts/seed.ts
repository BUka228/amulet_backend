/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Firestore
 */

import { initializeApp } from 'firebase-admin/app';
import { getFirestore, Timestamp, DocumentData } from 'firebase-admin/firestore';
import { Practice, Pattern, PatternSpec } from '../types';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase Admin
const app = initializeApp();
const db = getFirestore(app);

// –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
const practices: Omit<Practice, 'id' | 'createdAt' | 'updatedAt'>[] = [
  {
    type: 'breath',
    title: '–ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ',
    description: '–¢–µ—Ö–Ω–∏–∫–∞ —É—Å–ø–æ–∫–æ–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ',
    durationSec: 300,
    patternId: 'breath_square',
    audioUrl: 'https://storage.googleapis.com/amulet-audio/practices/square-breathing.mp3',
    locales: {
      'ru': {
        title: '–ö–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ',
        description: '–¢–µ—Ö–Ω–∏–∫–∞ —É—Å–ø–æ–∫–æ–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ'
      },
      'en': {
        title: 'Square Breathing',
        description: 'Calming technique through even breathing'
      }
    },
    category: 'relaxation',
    difficulty: 'beginner',
    tags: ['breathing', 'calm', 'stress-relief'],
    isPublic: true,
    reviewStatus: 'approved',
    createdBy: 'system'
  },
  {
    type: 'breath',
    title: '4-7-8 –î—ã—Ö–∞–Ω–∏–µ',
    description: '–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞—Å—ã–ø–∞–Ω–∏—è –∏ —Å–Ω—è—Ç–∏—è —Ç—Ä–µ–≤–æ–≥–∏',
    durationSec: 240,
    patternId: 'breath_478',
    audioUrl: 'https://storage.googleapis.com/amulet-audio/practices/478-breathing.mp3',
    locales: {
      'ru': {
        title: '4-7-8 –î—ã—Ö–∞–Ω–∏–µ',
        description: '–¢–µ—Ö–Ω–∏–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞—Å—ã–ø–∞–Ω–∏—è –∏ —Å–Ω—è—Ç–∏—è —Ç—Ä–µ–≤–æ–≥–∏'
      },
      'en': {
        title: '4-7-8 Breathing',
        description: 'Technique for quick sleep and anxiety relief'
      }
    },
    category: 'sleep',
    difficulty: 'beginner',
    tags: ['breathing', 'sleep', 'anxiety'],
    isPublic: true,
    reviewStatus: 'approved',
    createdBy: 'system'
  },
  {
    type: 'meditation',
    title: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏',
    description: '5-–º–∏–Ω—É—Ç–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è –≤ –º–æ–º–µ–Ω—Ç–µ',
    durationSec: 300,
    patternId: 'meditation_mindfulness',
    audioUrl: 'https://storage.googleapis.com/amulet-audio/practices/mindfulness.mp3',
    locales: {
      'ru': {
        title: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏',
        description: '5-–º–∏–Ω—É—Ç–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è –≤ –º–æ–º–µ–Ω—Ç–µ'
      },
      'en': {
        title: 'Mindfulness Meditation',
        description: '5-minute practice of being present in the moment'
      }
    },
    category: 'mindfulness',
    difficulty: 'beginner',
    tags: ['meditation', 'mindfulness', 'present'],
    isPublic: true,
    reviewStatus: 'approved',
    createdBy: 'system'
  },
  {
    type: 'sound',
    title: '–ó–≤—É–∫–∏ –¥–æ–∂–¥—è',
    description: '–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–µ –∑–≤—É–∫–∏ –¥–æ–∂–¥—è –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏',
    durationSec: 600,
    patternId: 'sound_rain',
    audioUrl: 'https://storage.googleapis.com/amulet-audio/practices/rain-sounds.mp3',
    locales: {
      'ru': {
        title: '–ó–≤—É–∫–∏ –¥–æ–∂–¥—è',
        description: '–†–∞—Å—Å–ª–∞–±–ª—è—é—â–∏–µ –∑–≤—É–∫–∏ –¥–æ–∂–¥—è –¥–ª—è –º–µ–¥–∏—Ç–∞—Ü–∏–∏'
      },
      'en': {
        title: 'Rain Sounds',
        description: 'Relaxing rain sounds for meditation'
      }
    },
    category: 'nature',
    difficulty: 'beginner',
    tags: ['nature', 'rain', 'relaxation'],
    isPublic: true,
    reviewStatus: 'approved',
    createdBy: 'system'
  }
];

// –ë–∞–∑–æ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∞–Ω–∏–º–∞—Ü–∏–π
const patterns: Omit<Pattern, 'id' | 'createdAt' | 'updatedAt'>[] = [
  {
    kind: 'light',
    spec: {
      type: 'breathing',
      hardwareVersion: 100,
      duration: 5000,
      loop: true,
      elements: [
        {
          type: 'pulse',
          startTime: 0,
          duration: 5000,
          params: {
            color: '#00FF00',
            intensity: 0.8,
            speed: 1.0
          }
        }
      ]
    } as PatternSpec,
    public: true,
    reviewStatus: 'approved',
    hardwareVersion: 100,
    title: '–î—ã—Ö–∞–Ω–∏–µ (v1.0)',
    description: '–ü–ª–∞–≤–Ω–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è –¥–ª—è –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫',
    tags: ['breathing', 'calm', 'v1.0'],
    usageCount: 0,
    sharedWith: []
  },
  {
    kind: 'light',
    spec: {
      type: 'breathing',
      hardwareVersion: 200,
      duration: 5000,
      loop: true,
      elements: [
        {
          type: 'pulse',
          startTime: 0,
          duration: 5000,
          params: {
            color: '#00FF00',
            intensity: 0.8,
            speed: 1.0,
            direction: 'center'
          }
        }
      ]
    } as PatternSpec,
    public: true,
    reviewStatus: 'approved',
    hardwareVersion: 200,
    title: '–î—ã—Ö–∞–Ω–∏–µ (v2.0)',
    description: '–ü–ª–∞–≤–Ω–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è –æ—Ç —Ü–µ–Ω—Ç—Ä–∞ –¥–ª—è –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫',
    tags: ['breathing', 'calm', 'v2.0'],
    usageCount: 0,
    sharedWith: []
  },
  {
    kind: 'light',
    spec: {
      type: 'rainbow',
      hardwareVersion: 200,
      duration: 8000,
      loop: true,
      elements: [
        {
          type: 'gradient',
          startTime: 0,
          duration: 8000,
          params: {
            colors: ['#FF0000', '#FF8000', '#FFFF00', '#00FF00', '#0080FF', '#8000FF'],
            intensity: 0.9,
            speed: 0.5,
            direction: 'clockwise'
          }
        }
      ]
    } as PatternSpec,
    public: true,
    reviewStatus: 'approved',
    hardwareVersion: 200,
    title: '–†–∞–¥—É–≥–∞ (v2.0)',
    description: '–ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ —Ü–≤–µ—Ç–æ–≤ –ø–æ –∫–æ–ª—å—Ü—É',
    tags: ['rainbow', 'colorful', 'v2.0'],
    usageCount: 0,
    sharedWith: []
  },
  {
    kind: 'haptic',
    spec: {
      type: 'pulse',
      hardwareVersion: 100,
      duration: 3000,
      loop: true,
      elements: [
        {
          type: 'pulse',
          startTime: 0,
          duration: 3000,
          params: {
            intensity: 0.7,
            speed: 1.0
          }
        }
      ]
    } as PatternSpec,
    public: true,
    reviewStatus: 'approved',
    hardwareVersion: 100,
    title: '–í–∏–±—Ä–∞—Ü–∏—è —É—Å–ø–æ–∫–æ–µ–Ω–∏—è',
    description: '–ú—è–≥–∫–∞—è –ø—É–ª—å—Å–∞—Ü–∏—è –¥–ª—è —Å–Ω—è—Ç–∏—è —Å—Ç—Ä–µ—Å—Å–∞',
    tags: ['haptic', 'calm', 'stress-relief'],
    usageCount: 0,
    sharedWith: []
  },
  {
    kind: 'combo',
    spec: {
      type: 'custom',
      hardwareVersion: 200,
      duration: 10000,
      loop: true,
      elements: [
        {
          type: 'gradient',
          startTime: 0,
          duration: 10000,
          params: {
            colors: ['#FF6B6B', '#4ECDC4', '#45B7D1'],
            intensity: 0.8,
            speed: 0.3,
            direction: 'counterclockwise'
          }
        },
        {
          type: 'pulse',
          startTime: 0,
          duration: 10000,
          params: {
            intensity: 0.6,
            speed: 0.8
          }
        }
      ]
    } as PatternSpec,
    public: true,
    reviewStatus: 'approved',
    hardwareVersion: 200,
    title: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è —Å–≤–µ—Ç–∞ –∏ –≤–∏–±—Ä–∞—Ü–∏–∏',
    description: '–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –≥–ª—É–±–æ–∫–æ–π –º–µ–¥–∏—Ç–∞—Ü–∏–∏',
    tags: ['meditation', 'combo', 'v2.0'],
    usageCount: 0,
    sharedWith: []
  }
];

async function seedPractices() {
  console.log('üå± –ó–∞—Å–µ–∏–≤–∞–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫...');
  
  for (const practice of practices) {
    const docRef = db.collection('practices').doc();
    const now = Timestamp.now();
    
    await docRef.set({
      ...practice,
      id: docRef.id,
      createdAt: now,
      updatedAt: now
    });
    
    console.log(`‚úÖ –ü—Ä–∞–∫—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: ${practice.title}`);
  }
}

async function seedPatterns() {
  console.log('üå± –ó–∞—Å–µ–∏–≤–∞–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤...');
  
  for (const pattern of patterns) {
    const docRef = db.collection('patterns').doc();
    const now = Timestamp.now();
    
    await docRef.set({
      ...pattern,
      id: docRef.id,
      createdAt: now,
      updatedAt: now
    });
    
    console.log(`‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω —Å–æ–∑–¥–∞–Ω: ${pattern.title}`);
  }
}

async function seedFirmware() {
  console.log('üå± –ó–∞—Å–µ–∏–≤–∞–Ω–∏–µ –ø—Ä–æ—à–∏–≤–æ–∫...');
  
  const now = Timestamp.now();
  const yesterday = new Date(now.toDate());
  yesterday.setDate(yesterday.getDate() - 1);
  const yesterdayTs = Timestamp.fromDate(yesterday);
  
  const firmwareData = [
    // v1.0 –ø—Ä–æ—à–∏–≤–∫–∏
    {
      version: '1.0.0',
      hardwareVersion: 100,
      downloadUrl: 'https://storage.googleapis.com/amulet-firmware/v1.0.0/firmware.bin',
      checksum: 'abc123def4567890abcdef1234567890abcdef12',
      size: 1024000,
      releaseNotes: '–ü–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏ —Å –±–∞–∑–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º',
      locales: {
        'ru': {
          releaseNotes: '–ü–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏ —Å –±–∞–∑–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º'
        },
        'en': {
          releaseNotes: 'First firmware version with basic functionality'
        }
      },
      isActive: true,
      minFirmwareVersion: '0.0.0',
      maxFirmwareVersion: '1.0.0',
      rolloutPercentage: 100,
      publishedAt: yesterdayTs,
      publishedBy: 'system'
    },
    {
      version: '1.1.0',
      hardwareVersion: 100,
      downloadUrl: 'https://storage.googleapis.com/amulet-firmware/v1.1.0/firmware.bin',
      checksum: 'def4567890123456def4567890123456def45678',
      size: 1124000,
      releaseNotes: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –æ—à–∏–±–æ–∫ –∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏',
      locales: {
        'ru': {
          releaseNotes: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ –æ—à–∏–±–æ–∫ –∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏'
        },
        'en': {
          releaseNotes: 'Update with bug fixes and stability improvements'
        }
      },
      isActive: true,
      minFirmwareVersion: '1.0.0',
      maxFirmwareVersion: '1.1.0',
      rolloutPercentage: 100,
      publishedAt: now,
      publishedBy: 'system'
    },
    // v2.0 –ø—Ä–æ—à–∏–≤–∫–∏
    {
      version: '2.0.0',
      hardwareVersion: 200,
      downloadUrl: 'https://storage.googleapis.com/amulet-firmware/v2.0.0/firmware.bin',
      checksum: 'fedcba0987654321fedcba0987654321fedcba09',
      size: 2048000,
      releaseNotes: '–í—Ç–æ—Ä–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–æ–ª—å—Ü–∞ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤',
      locales: {
        'ru': {
          releaseNotes: '–í—Ç–æ—Ä–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–æ–ª—å—Ü–∞ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤'
        },
        'en': {
          releaseNotes: 'Second firmware with LED ring support'
        }
      },
      isActive: true,
      minFirmwareVersion: '0.0.0',
      maxFirmwareVersion: '2.0.0',
      rolloutPercentage: 100,
      publishedAt: yesterdayTs,
      publishedBy: 'system'
    },
    {
      version: '2.1.0',
      hardwareVersion: 200,
      downloadUrl: 'https://storage.googleapis.com/amulet-firmware/v2.1.0/firmware.bin',
      checksum: '1234567890abcdef1234567890abcdef12345678',
      size: 2148000,
      releaseNotes: '–ù–æ–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —É–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
      locales: {
        'ru': {
          releaseNotes: '–ù–æ–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ —É–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å'
        },
        'en': {
          releaseNotes: 'New animations and improved performance'
        }
      },
      isActive: true,
      minFirmwareVersion: '2.0.0',
      maxFirmwareVersion: '2.1.0',
      rolloutPercentage: 50, // –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ
      publishedAt: now,
      publishedBy: 'system'
    },
    {
      version: '2.2.0',
      hardwareVersion: 200,
      downloadUrl: 'https://storage.googleapis.com/amulet-firmware/v2.2.0/firmware.bin',
      checksum: '9876543210fedcba9876543210fedcba98765432',
      size: 2248000,
      releaseNotes: '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)',
      locales: {
        'ru': {
          releaseNotes: '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)'
        },
        'en': {
          releaseNotes: 'Experimental version with new features (testing only)'
        }
      },
      isActive: true,
      minFirmwareVersion: '2.1.0',
      maxFirmwareVersion: '2.2.0',
      rolloutPercentage: 10, // –û—á–µ–Ω—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ
      publishedAt: now,
      publishedBy: 'system'
    }
  ];

  for (const fw of firmwareData) {
    const docRef = db.collection('firmware').doc();
    await docRef.set({
      ...fw,
      id: docRef.id,
      createdAt: now,
      updatedAt: now
    });
    console.log(`‚úÖ –ü—Ä–æ—à–∏–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: ${fw.version} (HW v${fw.hardwareVersion}, rollout: ${fw.rolloutPercentage}%)`);
  }
}

async function main() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞—Å–µ–∏–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    await seedPatterns();
    // –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤, —Å–≤—è–∂–µ–º –ø—Ä–∞–∫—Ç–∏–∫–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ patternId
    // –ö–∞—Ä—Ç–∞ –æ–∂–∏–¥–∞–µ–º—ã—Ö –∫–ª—é—á–µ–π -> —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    const createdPatterns = await db.collection('patterns').get();
    const titleToId = new Map<string, string>();
    createdPatterns.forEach((doc) => {
      const data = doc.data() as DocumentData;
      titleToId.set(data.title as string, data.id as string);
    });

    // –û–±–Ω–æ–≤–∏–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –ø—Ä–∞–∫—Ç–∏–∫ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ id –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
    const patternTitleByKey: Record<string, string> = {
      breath_square: '–î—ã—Ö–∞–Ω–∏–µ (v1.0)',
      breath_478: '–î—ã—Ö–∞–Ω–∏–µ (v2.0)',
      meditation_mindfulness: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è —Å–≤–µ—Ç–∞ –∏ –≤–∏–±—Ä–∞—Ü–∏–∏',
      sound_rain: '–†–∞–¥—É–≥–∞ (v2.0)'
    };
    practices.forEach((p) => {
      const title = patternTitleByKey[p.patternId as string];
      if (title) {
        const resolvedId = titleToId.get(title);
        if (resolvedId) {
          p.patternId = resolvedId;
        }
      }
    });

    await seedPractices();
    await seedFirmware();
    
    console.log('üéâ –ó–∞—Å–µ–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞—Å–µ–∏–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  main();
}

export { seedPractices, seedPatterns, seedFirmware };

// –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä –¥–ª—è —Ç–µ—Å—Ç–æ–≤: —Å–æ–∑–¥–∞—ë—Ç –ø–∞—Ç—Ç–µ—Ä–Ω—ã, –º–∞–ø–ø–∏—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏, —Å–æ–∑–¥–∞—ë—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –ø—Ä–æ—à–∏–≤–∫–∏
export async function seedAll() {
  await seedPatterns();
  const createdPatterns = await db.collection('patterns').get();
  const titleToId = new Map<string, string>();
  createdPatterns.forEach((doc) => {
    const data = doc.data() as DocumentData;
    titleToId.set(data.title as string, data.id as string);
  });
  const patternTitleByKey: Record<string, string> = {
    breath_square: '–î—ã—Ö–∞–Ω–∏–µ (v1.0)',
    breath_478: '–î—ã—Ö–∞–Ω–∏–µ (v2.0)',
    meditation_mindfulness: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è —Å–≤–µ—Ç–∞ –∏ –≤–∏–±—Ä–∞—Ü–∏–∏',
    sound_rain: '–†–∞–¥—É–≥–∞ (v2.0)'
  };
  practices.forEach((p) => {
    const title = patternTitleByKey[p.patternId as string];
    if (title) {
      const resolvedId = titleToId.get(title);
      if (resolvedId) {
        p.patternId = resolvedId;
      }
    }
  });
  await seedPractices();
  await seedFirmware();
}
